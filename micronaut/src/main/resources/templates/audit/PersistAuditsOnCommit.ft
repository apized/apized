package ${module};

import org.apized.core.audit.AuditContext;
import io.micronaut.transaction.annotation.TransactionalEventListener;
import jakarta.inject.Inject;
import jakarta.inject.Singleton;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Singleton
class PersistAuditsOnCommit {
  @Inject
  AuditEntryRepository repository;

  @TransactionalEventListener(TransactionalEventListener.TransactionPhase.BEFORE_COMMIT)
  public void beforeCommit(Object event) {
    int size = AuditContext.getInstance().getAuditEntries().size();
    log.info("Saving {} audit logs triggered by {}.", size, event);
    if (size > 0) {
      repository.saveAll(AuditContext.getInstance().getAuditEntries().values());
    }
  }
}
